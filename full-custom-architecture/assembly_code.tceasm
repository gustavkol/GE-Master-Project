CODE;

:global init;
:global init_delay;
:global next_int_delay;
:global next_frac_delay;


:procedure delay;


init:       # Loads input from memory
#################################################################################################
#            bus1                             bus2                           bus3  
#################################################################################################
0 -> lsu.in1t.ld32              , ...                          , ...                             ;
...                             , ...                          , ...                             ;
...                             , ...                          , ...                             ;
4 -> lsu.in1t.ld32              , ...                          , lsu.out1 -> RF1.0               ; # R_0
...                             , ...                          , ...                             ;
...                             , ...                          , ...                             ;
 ...                            , ...                          , lsu.out1 -> RF1.1               ; # angle




init_delay:
#################################################################################################
#            bus1                 ,            bus2              ,             bus3             #
#################################################################################################


## Delay registers: RF2.4, RF2.8, RF2.12, RF2.16, RF2.20, RF2.24, RF2.28, RF2.32
## Inc_term registers: RF1.2, RF1.3, RF1.4, RF1.5, RF1.6, RF1.7, RF1.8, RF1.9

## INIT ALGO 
RF1.1    -> FU_CORDIC.P1.cordic           , 129        -> FU_CORDIC.P2      , ...                          ;
RF1.0    -> alu.in1t.const_mult_bn        , 0          -> alu.in2           , ...                          ;
alu.out1 -> alu.in1t.add                  , 1          -> alu.in2           , ...                          ;
RF1.0    -> alu.in1t.const_mult_n0        , 0          -> alu.in2           , alu.out1      -> RF1.2       ; # inc_term[0] = mult_bn + 1
RF1.0    -> alu.in1t.const_mult_c0        , 0          -> alu.in2           , alu.out1      -> RF2.4       ; # delay[0] = mult_n0
264      -> alu.in1t.add                  , 264        -> alu.in2           , alu.out1      -> RF2.1       ; # x_scale
alu.out1 -> alu.in1t.add                  , 264        -> alu.in2           , alu.out1      -> RF2.6       ; # A0_CONST << 1
 ...                                      , ...                             , alu.out1      -> RF2.3       ; # A0_CONST + (A0_CONST << 1)
 ...                                      , ...                             , ...                          ;
 ...                                      , ...                             , ...                          ;
 ...                                      , ...                             , ...                          ;
 ...                                      , ...                             , ...                          ;
RF1.1    -> FU_CORDIC.P1.cordic           , RF2.1      -> FU_CORDIC.P2      , FU_CORDIC.P3 -> RF2.5        ; # cos_b_n
RF1.2    -> alu.in1t.sub                  , RF2.5      -> alu.in2           , ...                          ;
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.2       ; # inc_term[0]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.3       ; # inc_term[1]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.4       ; # inc_term[2]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.5       ; # inc_term[3]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.6       ; # inc_term[4]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.7       ; # inc_term[5]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.8       ; # inc_term[6]
alu.out1 -> alu.in1t.sub                  , RF2.5      -> alu.in2           , alu.out1      -> RF1.9       ; # inc_term[7]
 ...                                      , ...                             , ...                          ;
 ...                                      , ...                             , ...                          ;
264 -> alu.in1t.sub                       , FU_CORDIC.P3 -> alu.in2         , ...                          ; # c0
 ...                                      , ...                             , alu.out1      -> RF1.10      ; # inc_term_pos


########################################### INITIAL DELAY VALUES ###########################################

RF1.10      -> FU_ALGO.P1.add                   , 0      -> FU_ALGO.P2     , ...                          ;
RF1.10      -> FU_ALGO.P1.compare_and_iter_int  , RF2.4  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
...                                             ,  ...                     , ...                          ;
FU_ALGO.P3  -> FU_ALGO.P1.mask_add              , 0      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3  -> FU_ALGO.P1.add                   , RF2.4  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1       -> FU_ALGO.P1.shift_sub             , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.8          ; # n_prev
RF1.1       -> FU_ALGO.P1.shift_add             , 0      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10      -> FU_ALGO.P1.add                   , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.10     -> FU_ALGO.P1.add                    , RF2.2  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.10         ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.8  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.8  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.12         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10     -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.10     -> FU_ALGO.P1.add                    , RF2.2  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.10         ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.12 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.12 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.16         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10     -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.10     -> FU_ALGO.P1.add                    , RF2.2  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.10         ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.16 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.16 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.20         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10     -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.10     -> FU_ALGO.P1.add                    , RF2.2  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.10         ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.20 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.20 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.24         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10     -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.10     -> FU_ALGO.P1.add                    , RF2.2  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.10         ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.24 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.24  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.28         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10     -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.10     -> FU_ALGO.P1.add                    , RF2.2  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.10         ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.28 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.28 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.32         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.10     -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev


########################################### NEXT DELAY INT ###########################################
next_int_delay:
RF1.2      -> FU_ALGO.P1.add                    , 0      -> FU_ALGO.P2    , ...                        ;
RF1.2      -> FU_ALGO.P1.compare_and_iter_int   , RF2.4  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
...                                             ,  ...                    , ...                        ;
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , 0      -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.4  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.5        ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.4        ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , 0      -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.2        ; # error_prev
RF1.2      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.3        ; # inc_prev[0]

RF1.3      -> FU_ALGO.P1.sub                    , RF2.3  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.2        ; # inc_term[0]
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.8  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.5  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.8  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.9        ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.8        ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.3  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.6        ; # error_prev
RF1.3      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.7        ; # inc_prev[1]

RF1.4      -> FU_ALGO.P1.sub                    , RF2.7  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.3        ; # inc_term[1]
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.12 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.9  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.12  -> FU_ALGO.P2   , FU_ALGO.P3 -> RF2.13       ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.12       ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.7  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.10       ; # error_prev
RF1.4      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.11       ; # inc_prev[2]

RF1.5      -> FU_ALGO.P1.sub                    , RF2.11 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.4        ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.16 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.13 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.16 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.17       ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.16       ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.11 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.14       ; # error_prev
RF1.5      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.15       ; # inc_prev

RF1.6      -> FU_ALGO.P1.sub                    , RF2.15 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.5        ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.20 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.17 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.20 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.21       ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.20       ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.15 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.18       ; # error_prev
RF1.6      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.19       ; # inc_prev

RF1.7      -> FU_ALGO.P1.sub                    , RF2.19 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.6        ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.24 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.21 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.24 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.25       ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.24       ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.19 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.22       ; # error_prev
RF1.7      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.23       ; # inc_prev

RF1.8      -> FU_ALGO.P1.sub                    , RF2.23 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.7        ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.28 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.25 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.28 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.29       ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.28       ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.23 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.26       ; # error_prev
RF1.8      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.27       ; # inc_prev

RF1.9      -> FU_ALGO.P1.sub                    , RF2.27 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.8        ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.32 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.1        ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.29 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF1.1        ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.32 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.33       ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.32       ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.27 -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.30       ; # error_prev
RF1.9      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2    , FU_ALGO.P3 -> RF2.31       ; # inc_prev

            ...                                 ,             ...          , FU_ALGO.P3 -> RF1.9       ; # inc_term





########################################### NEXT DELAY FRAC ###########################################
next_frac_delay:
RF1.2      -> FU_ALGO.P1.add                    ,  RF2.2 -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.sub                    ,  RF2.3 -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     ,  RF2.4 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               ,  RF2.5 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    ,  RF2.4 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.5          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              ,  RF2.1 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.4          ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              ,  RF2.3 -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.2          ; # error_prev
RF1.2      -> FU_ALGO.P1.add                    ,  32    -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.3          ; # inc_prev

RF1.3      -> FU_ALGO.P1.add                    , RF2.6  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.2          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.7  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.8  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.9  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.8  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.9          ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.8          ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.7  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.6          ; # error_prev
RF1.3      -> FU_ALGO.P1.add                    , 32     -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.7          ; # inc_prev

RF1.4      -> FU_ALGO.P1.add                    , RF2.10  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.3          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.11  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.12  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.13  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.12  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.13         ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1   -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.12         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.11  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.10         ; # error_prev
RF1.4      -> FU_ALGO.P1.add                    , 32      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.11         ; # inc_prev

RF1.5      -> FU_ALGO.P1.add                    , RF2.14  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.4          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.15  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.16  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.17  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.16  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.17         ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1   -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.16         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.15  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.14         ; # error_prev
RF1.5      -> FU_ALGO.P1.add                    , 32      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.15         ; # inc_prev

RF1.6      -> FU_ALGO.P1.add                    , RF2.18  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.5          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.19  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.20  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.21  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.20  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.21         ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1   -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.20         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.19  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.18         ; # error_prev
RF1.6      -> FU_ALGO.P1.add                    , 32      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.19         ; # inc_prev

RF1.7      -> FU_ALGO.P1.add                    , RF2.22  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.6          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.23  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.24  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.25  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.24  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.25         ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1   -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.24         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.23  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.22         ; # error_prev
RF1.7      -> FU_ALGO.P1.add                    , 32      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.23         ; # inc_prev

RF1.8      -> FU_ALGO.P1.add                    , RF2.26  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.7          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.27  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.28  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.29  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.28  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.29         ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1   -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.28         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.27  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.26         ; # error_prev
RF1.8      -> FU_ALGO.P1.add                    , 32      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.27         ; # inc_prev

RF1.9      -> FU_ALGO.P1.add                    , RF2.30  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.8          ; # inc_term
FU_ALGO.P3 -> FU_ALGO.P1.sub                    , RF2.31  -> FU_ALGO.P2     , ...                          ;
FU_ALGO.P3 -> FU_ALGO.P1.compare_and_iter_f     , RF2.32  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.1          ; # in2
FU_ALGO.P3 -> FU_ALGO.P1.mask_add               , RF2.33  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF1.1          ; # out
FU_ALGO.P3 -> FU_ALGO.P1.add                    , RF2.32  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.33         ; # a_prev
RF1.1      -> FU_ALGO.P1.shift_sub              , RF2.1   -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.32         ; # n_prev
RF1.1      -> FU_ALGO.P1.shift_add              , RF2.31  -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.30         ; # error_prev
RF1.9      -> FU_ALGO.P1.add                    , 32      -> FU_ALGO.P2     , FU_ALGO.P3 -> RF2.31         ; # inc_prev

            ...                                 ,             ...           , FU_ALGO.P3 -> RF1.9          ; # inc_term


####
# Write result to memory
####
8     -> lsu.in1t.st32         , RF2.4  -> lsu.in2             ,             ...                  ;
12    -> lsu.in1t.st32         , RF2.8  -> lsu.in2             ,             ...                  ;
16    -> lsu.in1t.st32         , RF2.12 -> lsu.in2             ,             ...                  ;
20    -> lsu.in1t.st32         , RF2.16 -> lsu.in2             ,             ...                  ;
24    -> lsu.in1t.st32         , RF2.20 -> lsu.in2             ,             ...                  ;
28    -> lsu.in1t.st32         , RF2.24 -> lsu.in2             ,             ...                  ;
32    -> lsu.in1t.st32         , RF2.28 -> lsu.in2             ,             ...                  ;
36    -> lsu.in1t.st32         , RF2.32 -> lsu.in2             ,             ...                  ;



# initializing memory
DATA data 0 ;

DA 8
4:0x00000064        # r_0   = 100
4:0x0000006E;       # angle = 110
